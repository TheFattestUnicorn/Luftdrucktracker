"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const constants_1 = require("./constants");
const utils_1 = require("./utils");
/**
 * @hidden
 */
exports.extractCtrlMeas = (value) => ({
    osrsT: utils_1.extractValue(value, constants_1.MASKS.OSRS_T, constants_1.OFFSETS.OSRS_T),
    osrsP: utils_1.extractValue(value, constants_1.MASKS.OSRS_P, constants_1.OFFSETS.OSRS_P),
    mode: utils_1.extractValue(value, constants_1.MASKS.MODE, constants_1.OFFSETS.MODE),
});
/**
 * @hidden
 */
exports.extractConfig = (value) => ({
    tSb: utils_1.extractValue(value, constants_1.MASKS.T_SB, constants_1.OFFSETS.T_SB),
    filter: utils_1.extractValue(value, constants_1.MASKS.FILTER, constants_1.OFFSETS.FILTER),
});
/**
 * @hidden
 */
exports.parseOversampling = utils_1.lookUp(constants_1.OVERSAMPLING);
/**
 * @hidden
 */
exports.readOversampling = utils_1.reverseLookUp(constants_1.OVERSAMPLING);
/**
 * @hidden
 */
exports.parseMode = utils_1.lookUp(constants_1.MODE);
/**
 * @hidden
 */
exports.readMode = utils_1.reverseLookUp(constants_1.MODE);
/**
 * @hidden
 */
exports.parseStandbyTime = utils_1.lookUp(constants_1.STANDBY_TIME);
/**
 * @hidden
 */
exports.readStandbyTime = utils_1.reverseLookUp(constants_1.STANDBY_TIME);
/**
 * @hidden
 */
exports.parseIirFilter = utils_1.lookUp(constants_1.IIR_FILTER);
/**
 * @hidden
 */
exports.readIirFilter = utils_1.reverseLookUp(constants_1.IIR_FILTER);
/**
 * @hidden
 */
exports.calculateTemperature = (rawTemperature, correction) => {
    const var1 = (rawTemperature / 16384 - correction[0] / 1024) * correction[1];
    const var2 = Math.pow(rawTemperature / 131072 - correction[0] / 8192, 2) * correction[2];
    return var1 + var2;
};
/**
 * @hidden
 */
exports.calculatePressure = (rawPressure, temperatureFine, correction) => {
    let var1 = temperatureFine / 2 - 64000;
    let var2 = var1 * (var1 * (correction[5] / 32768) + correction[4] * 2);
    var2 = var2 / 4 + correction[3] * 65536;
    var1 = ((correction[2] * var1 * var1) / 524288 + correction[1] * var1) / 524288;
    var1 = (1 + var1 / 32768) * correction[0];
    if (var1 === 0) {
        return 0;
    }
    let var3 = 1048576 - rawPressure;
    var3 = (var3 - var2 / 4096) * (6250 / var1);
    var1 = correction[8] * ((var3 * var3) / 2147483648);
    var2 = (var3 * correction[7]) / 32768;
    return var3 + (var1 + var2 + correction[6]) / 16;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvaGVscGVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLDJDQUEyRjtBQUMzRixtQ0FBOEQ7QUFFOUQ7O0dBRUc7QUFDVSxRQUFBLGVBQWUsR0FBRyxDQUFDLEtBQWEsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNqRCxLQUFLLEVBQUUsb0JBQVksQ0FBQyxLQUFLLEVBQUUsaUJBQUssQ0FBQyxNQUFNLEVBQUUsbUJBQU8sQ0FBQyxNQUFNLENBQUM7SUFDeEQsS0FBSyxFQUFFLG9CQUFZLENBQUMsS0FBSyxFQUFFLGlCQUFLLENBQUMsTUFBTSxFQUFFLG1CQUFPLENBQUMsTUFBTSxDQUFDO0lBQ3hELElBQUksRUFBRSxvQkFBWSxDQUFDLEtBQUssRUFBRSxpQkFBSyxDQUFDLElBQUksRUFBRSxtQkFBTyxDQUFDLElBQUksQ0FBQztDQUNwRCxDQUFDLENBQUM7QUFFSDs7R0FFRztBQUNVLFFBQUEsYUFBYSxHQUFHLENBQUMsS0FBYSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQy9DLEdBQUcsRUFBRSxvQkFBWSxDQUFDLEtBQUssRUFBRSxpQkFBSyxDQUFDLElBQUksRUFBRSxtQkFBTyxDQUFDLElBQUksQ0FBQztJQUNsRCxNQUFNLEVBQUUsb0JBQVksQ0FBQyxLQUFLLEVBQUUsaUJBQUssQ0FBQyxNQUFNLEVBQUUsbUJBQU8sQ0FBQyxNQUFNLENBQUM7Q0FDMUQsQ0FBQyxDQUFDO0FBRUg7O0dBRUc7QUFDVSxRQUFBLGlCQUFpQixHQUFHLGNBQU0sQ0FBcUIsd0JBQVksQ0FBQyxDQUFDO0FBQzFFOztHQUVHO0FBQ1UsUUFBQSxnQkFBZ0IsR0FBRyxxQkFBYSxDQUFxQix3QkFBWSxDQUFDLENBQUM7QUFFaEY7O0dBRUc7QUFDVSxRQUFBLFNBQVMsR0FBRyxjQUFNLENBQWEsZ0JBQUksQ0FBQyxDQUFDO0FBQ2xEOztHQUVHO0FBQ1UsUUFBQSxRQUFRLEdBQUcscUJBQWEsQ0FBYSxnQkFBSSxDQUFDLENBQUM7QUFFeEQ7O0dBRUc7QUFDVSxRQUFBLGdCQUFnQixHQUFHLGNBQU0sQ0FBb0Isd0JBQVksQ0FBQyxDQUFDO0FBQ3hFOztHQUVHO0FBQ1UsUUFBQSxlQUFlLEdBQUcscUJBQWEsQ0FBb0Isd0JBQVksQ0FBQyxDQUFDO0FBRTlFOztHQUVHO0FBQ1UsUUFBQSxjQUFjLEdBQUcsY0FBTSxDQUFrQixzQkFBVSxDQUFDLENBQUM7QUFDbEU7O0dBRUc7QUFDVSxRQUFBLGFBQWEsR0FBRyxxQkFBYSxDQUFrQixzQkFBVSxDQUFDLENBQUM7QUFFeEU7O0dBRUc7QUFDVSxRQUFBLG9CQUFvQixHQUFHLENBQUMsY0FBc0IsRUFBRSxVQUFvQixFQUFVLEVBQUU7SUFDM0YsTUFBTSxJQUFJLEdBQUcsQ0FBQyxjQUFjLEdBQUcsS0FBSyxHQUFHLFVBQVUsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDN0UsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxjQUFjLEdBQUcsTUFBTSxHQUFHLFVBQVUsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLEVBQUUsQ0FBQyxDQUFDLEdBQUcsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRXpGLE9BQU8sSUFBSSxHQUFHLElBQUksQ0FBQztBQUNyQixDQUFDLENBQUM7QUFFRjs7R0FFRztBQUNVLFFBQUEsaUJBQWlCLEdBQUcsQ0FBQyxXQUFtQixFQUFFLGVBQXVCLEVBQUUsVUFBb0IsRUFBVSxFQUFFO0lBQzlHLElBQUksSUFBSSxHQUFHLGVBQWUsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQ3ZDLElBQUksSUFBSSxHQUFHLElBQUksR0FBRyxDQUFDLElBQUksR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBRyxVQUFVLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFFdkUsSUFBSSxHQUFHLElBQUksR0FBRyxDQUFDLEdBQUcsVUFBVSxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQztJQUN4QyxJQUFJLEdBQUcsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLEdBQUcsSUFBSSxDQUFDLEdBQUcsTUFBTSxHQUFHLFVBQVUsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxNQUFNLENBQUM7SUFDaEYsSUFBSSxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksR0FBRyxLQUFLLENBQUMsR0FBRyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFMUMsSUFBSSxJQUFJLEtBQUssQ0FBQyxFQUFFO1FBQ2QsT0FBTyxDQUFDLENBQUM7S0FDVjtJQUVELElBQUksSUFBSSxHQUFHLE9BQU8sR0FBRyxXQUFXLENBQUM7SUFDakMsSUFBSSxHQUFHLENBQUMsSUFBSSxHQUFHLElBQUksR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsQ0FBQztJQUM1QyxJQUFJLEdBQUcsVUFBVSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEdBQUcsVUFBVSxDQUFDLENBQUM7SUFDcEQsSUFBSSxHQUFHLENBQUMsSUFBSSxHQUFHLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQztJQUV0QyxPQUFPLElBQUksR0FBRyxDQUFDLElBQUksR0FBRyxJQUFJLEdBQUcsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBQ25ELENBQUMsQ0FBQyJ9